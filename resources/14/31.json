{
    "hasNextPage": true,
    "data": [
        {
            "id": 9412,
            "title": "A Gentle Introduction to the Gradient Boosting Algorithm for Machine Learning",
            "url": "https://machinelearningmastery.com/gentle-introduction-gradient-boosting-algorithm-machine-learning/",
            "authors": "Jason Brownlee",
            "tags": "XGBoost",
            "publishedOn": "2016-09-09T00:00:00",
            "description": "Gradient boosting is\u00a0one of the most powerful techniques for building predictive models. In this post you will discover the gradient boosting machine learning algorithm and get a gentle introduction into where it came from and how it works. After reading this post, you will know: The origin of boosting from learning theory and AdaBoost. How [\u2026]",
            "thumbnail": "https://machinelearningmastery.com/wp-content/uploads/2016/07/A-Gentle-Introduction-to-the-Gradient-Boosting-Algorithm-for-Machine-Learning.jpg"
        },
        {
            "id": 9413,
            "title": "How to Tune the Number and Size of Decision Trees with XGBoost in Python",
            "url": "https://machinelearningmastery.com/tune-number-size-decision-trees-xgboost-python/",
            "authors": "Jason Brownlee",
            "tags": "XGBoost",
            "publishedOn": "2016-09-07T00:00:00",
            "description": "Gradient boosting involves the creation and addition of decision trees sequentially, each attempting to correct the mistakes of the learners that came before it. This raises the question as to how many trees (weak learners or estimators) to configure in your gradient boosting model and how big each\u00a0tree should be. In this post you will [\u2026]",
            "thumbnail": "https://machinelearningmastery.com/wp-content/uploads/2016/07/How-to-Tune-the-Number-and-Size-of-Decision-Trees-with-XGBoost-in-Python.jpg"
        },
        {
            "id": 9414,
            "title": "How to Best Tune Multithreading Support for XGBoost in Python",
            "url": "https://machinelearningmastery.com/best-tune-multithreading-support-xgboost-python/",
            "authors": "Jason Brownlee",
            "tags": "XGBoost",
            "publishedOn": "2016-09-05T00:00:00",
            "description": "The XGBoost library for gradient boosting uses is designed for efficient\u00a0multi-core parallel processing. This allows it to efficiently use all of the CPU cores in your system when training. In this post you will discover the parallel processing capabilities of the XGBoost in Python. After reading this post you will know: How to confirm that [\u2026]",
            "thumbnail": "https://machinelearningmastery.com/wp-content/uploads/2016/07/How-to-Best-Tune-Multithreading-Support-for-XGBoost-in-Python.jpg"
        },
        {
            "id": 9415,
            "title": "Avoid Overfitting By Early Stopping With XGBoost In Python",
            "url": "https://machinelearningmastery.com/avoid-overfitting-by-early-stopping-with-xgboost-in-python/",
            "authors": "Jason Brownlee",
            "tags": "XGBoost",
            "publishedOn": "2016-09-02T00:00:00",
            "description": "Overfitting is a problem with sophisticated non-linear learning algorithms like gradient boosting. In this post you will discover how you can use early stopping to limit overfitting with XGBoost in Python. After reading this post, you will know: About early stopping as an approach to reducing overfitting of training data. How to monitor the performance [\u2026]",
            "thumbnail": "https://machinelearningmastery.com/wp-content/uploads/2016/07/XGBoost-Learning-Curve-Log-Loss.png"
        },
        {
            "id": 9416,
            "title": "Feature Importance and Feature Selection With XGBoost in Python",
            "url": "https://machinelearningmastery.com/feature-importance-and-feature-selection-with-xgboost-in-python/",
            "authors": "Jason Brownlee",
            "tags": "XGBoost",
            "publishedOn": "2016-08-31T00:00:00",
            "description": "A benefit of using ensembles of decision tree methods like gradient boosting is that they can automatically provide estimates of feature importance from a trained predictive model. In this post you will discover how you can estimate the importance of features for a predictive modeling problem using the XGBoost library in Python. After reading this [\u2026]",
            "thumbnail": "https://machinelearningmastery.com/wp-content/uploads/2016/07/XGBoost-Feature-Importance-Bar-Chart.png"
        },
        {
            "id": 9417,
            "title": "How to Visualize Gradient Boosting Decision Trees With XGBoost in Python",
            "url": "https://machinelearningmastery.com/visualize-gradient-boosting-decision-trees-xgboost-python/",
            "authors": "Jason Brownlee",
            "tags": "XGBoost",
            "publishedOn": "2016-08-29T00:00:00",
            "description": "Plotting individual decision trees can provide insight into the gradient boosting process for a given dataset. In this tutorial you will discover how you can plot individual decision trees from a trained gradient boosting model using XGBoost in Python. Let\u2019s get started. Update Mar/2018: Added alternate link to download the dataset as the original appears [\u2026]",
            "thumbnail": "https://machinelearningmastery.com/wp-content/uploads/2016/07/XGBoost-Plot-of-Single-Decision-Tree.png"
        },
        {
            "id": 9418,
            "title": "How to Evaluate Gradient Boosting Models with XGBoost in Python",
            "url": "https://machinelearningmastery.com/evaluate-gradient-boosting-models-xgboost-python/",
            "authors": "Jason Brownlee",
            "tags": "XGBoost",
            "publishedOn": "2016-08-26T00:00:00",
            "description": "The goal of developing a predictive model\u00a0is to develop a model that is accurate on unseen data. This can be achieved using statistical techniques where the training dataset is carefully used to estimate the performance of the model on new and unseen data. In this tutorial you will discover how you can evaluate the performance [\u2026]",
            "thumbnail": "https://machinelearningmastery.com/wp-content/uploads/2016/08/5526750448_b63fa67ee6_z.jpg"
        },
        {
            "id": 9419,
            "title": "How to Save Gradient Boosting Models with XGBoost in Python",
            "url": "https://machinelearningmastery.com/save-gradient-boosting-models-xgboost-python/",
            "authors": "Jason Brownlee",
            "tags": "XGBoost",
            "publishedOn": "2016-08-24T00:00:00",
            "description": "XGBoost can be used to create some of the most performant models for tabular data using the gradient boosting algorithm. Once trained, it is often a good practice to save your\u00a0model to file for later use in making predictions new test and validation datasets and entirely new data. In this post you will discover how [\u2026]",
            "thumbnail": "https://machinelearningmastery.com/wp-content/uploads/2016/08/How-to-Save-Gradient-Boosting-Models-with-XGBoost-in-Python.jpg"
        },
        {
            "id": 9420,
            "title": "Data Preparation for Gradient Boosting with XGBoost in Python",
            "url": "https://machinelearningmastery.com/data-preparation-gradient-boosting-xgboost-python/",
            "authors": "Jason Brownlee",
            "tags": "XGBoost",
            "publishedOn": "2016-08-22T00:00:00",
            "description": "XGBoost is a popular implementation of Gradient Boosting because of its speed and performance. Internally, XGBoost models represent all problems as a regression predictive modeling problem that only takes numerical values as input. If\u00a0your data is in a different form, it must be prepared into the expected format. In this post, you will discover how [\u2026]",
            "thumbnail": "https://machinelearningmastery.com/wp-content/uploads/2016/08/Data-Preparation-for-Gradient-Boosting-with-XGBoost-in-Python.jpg"
        },
        {
            "id": 9421,
            "title": "How to Develop Your First XGBoost Model in Python",
            "url": "https://machinelearningmastery.com/develop-first-xgboost-model-python-scikit-learn/",
            "authors": "Jason Brownlee",
            "tags": "XGBoost",
            "publishedOn": "2016-08-19T00:00:00",
            "description": "XGBoost is an implementation of gradient boosted decision trees\u00a0designed for speed and performance that is dominative competitive machine learning. In this post you will discover how you can install and create your first XGBoost model in Python. After reading this post you will know: How to install XGBoost on your system for use in Python. [\u2026]",
            "thumbnail": "https://machinelearningmastery.com/wp-content/uploads/2016/08/How-to-Develop-Your-First-XGBoost-Model-in-Python-with-scikit-learn.jpg"
        },
        {
            "id": 9422,
            "title": "A Gentle Introduction to XGBoost for Applied Machine Learning",
            "url": "https://machinelearningmastery.com/gentle-introduction-xgboost-applied-machine-learning/",
            "authors": "Jason Brownlee",
            "tags": "XGBoost",
            "publishedOn": "2016-08-17T00:00:00",
            "description": "XGBoost is an algorithm that has recently been dominating applied machine learning and Kaggle competitions for structured or tabular data. XGBoost is an implementation of gradient boosted decision trees designed for speed and performance. In this post you will discover XGBoost and get a gentle introduction to what is, where it came from and how [\u2026]",
            "thumbnail": "https://machinelearningmastery.com/wp-content/uploads/2016/08/A-Gentle-Introduction-to-XGBoost-for-Applied-Machine-Learning.jpg"
        },
        {
            "id": 9423,
            "title": "Weka Machine Learning Mini-Course",
            "url": "https://machinelearningmastery.com/applied-machine-learning-weka-mini-course/",
            "authors": "Jason Brownlee",
            "tags": "Weka Machine Learning",
            "publishedOn": "2016-08-15T00:00:00",
            "description": "Become A Machine Learning Practitioner in 14-Days Machine learning is a fascinating study, but how do you actually use it on your own problems? You may be confused as to how best\u00a0prepare your data for machine learning, which algorithms to use or how to choose one model over another. In this post you will discover [\u2026]",
            "thumbnail": "https://machinelearningmastery.com/wp-content/uploads/2016/08/Applied-Machine-Learning-With-Weka-Mini-Course.jpg"
        },
        {
            "id": 9424,
            "title": "How to Get More Help For the Weka Machine Learning Workbench",
            "url": "https://machinelearningmastery.com/help-with-weka/",
            "authors": "Jason Brownlee",
            "tags": "Weka Machine Learning",
            "publishedOn": "2016-08-12T00:00:00",
            "description": "The Weka machine learning workbench is an easy to use and powerful platform for applied machine learning. Even though it is easy to use, you may still require some help or advice when using it on your own problems. In this post you will discover resources that you can use to get more help with [\u2026]",
            "thumbnail": "https://machinelearningmastery.com/wp-content/uploads/2016/08/How-to-Get-More-Help-For-the-Weka-Machine-Learning-Workbench.jpg"
        },
        {
            "id": 9425,
            "title": "5 Step Life-Cycle for Neural Network Models in Keras",
            "url": "https://machinelearningmastery.com/5-step-life-cycle-neural-network-models-keras/",
            "authors": "Jason Brownlee",
            "tags": "Deep Learning",
            "publishedOn": "2016-08-11T00:00:00",
            "description": "Deep learning neural networks are very easy to create and evaluate in Python with Keras, but you must follow a strict model life-cycle. In this post you will discover the step-by-step life-cycle for creating, training and evaluating deep learning neural networks in Keras and how to make predictions with a trained model. After reading this [\u2026]",
            "thumbnail": "https://machinelearningmastery.com/wp-content/uploads/2016/07/Deep-Learning-Neural-Network-Life-Cycle-in-Keras.jpg"
        },
        {
            "id": 9426,
            "title": "How to Work Through a Regression Machine Learning Project in Weka",
            "url": "https://machinelearningmastery.com/regression-machine-learning-tutorial-weka/",
            "authors": "Jason Brownlee",
            "tags": "Weka Machine Learning",
            "publishedOn": "2016-08-10T00:00:00",
            "description": "The fastest way to get good at applied machine learning is to practice on end-to-end projects. In this post you will discover how to work through a regression problem in Weka, end-to-end. After reading this post you will know: How to load and analyze a regression dataset in Weka. How to create multiple different transformed [\u2026]",
            "thumbnail": "https://machinelearningmastery.com/wp-content/uploads/2016/08/Step-By-Step-Regression-Machine-Learning-Project-Tutorial-in-Weka.jpg"
        },
        {
            "id": 9427,
            "title": "How To Work Through a Binary Classification Project in Weka Step-By-Step",
            "url": "https://machinelearningmastery.com/binary-classification-tutorial-weka/",
            "authors": "Jason Brownlee",
            "tags": "Weka Machine Learning",
            "publishedOn": "2016-08-08T00:00:00",
            "description": "The fastest way to get good at applied machine learning is to practice on end-to-end projects. In this post you will discover how to work through a binary classification problem in Weka, end-to-end. After reading this post you will know: How to load a dataset and analyze the loaded data. How to create multiple different [\u2026]",
            "thumbnail": "https://machinelearningmastery.com/wp-content/uploads/2016/08/Step-By-Step-Binary-Classification-Tutorial-in-Weka.jpg"
        },
        {
            "id": 9428,
            "title": "How To Work Through a Multi-Class Classification Project in Weka",
            "url": "https://machinelearningmastery.com/multi-class-classification-tutorial-weka/",
            "authors": "Jason Brownlee",
            "tags": "Weka Machine Learning",
            "publishedOn": "2016-08-05T00:00:00",
            "description": "The Weka machine learning workbench is so easy to use that working through a machine learning project can be a lot of fun. In this post you will complete your first machine learning project using Weka, end-to-end. This gentle introduction to working through a project will tie together the key steps you need to complete [\u2026]",
            "thumbnail": "https://machinelearningmastery.com/wp-content/uploads/2016/08/Multi-Class-Classification-Tutorial-in-Weka.jpg"
        },
        {
            "id": 9429,
            "title": "Text Generation With LSTM Recurrent Neural Networks in Python with Keras",
            "url": "https://machinelearningmastery.com/text-generation-lstm-recurrent-neural-networks-python-keras/",
            "authors": "Jason Brownlee",
            "tags": "Deep Learning for Natural Language Processing",
            "publishedOn": "2016-08-04T00:00:00",
            "description": "Recurrent neural networks can also be used as generative models. This means that in addition to being used for predictive models (making predictions), they can learn the sequences of a problem and then generate entirely new plausible sequences for the problem domain. Generative models like this are useful not only to study how well a [\u2026]",
            "thumbnail": "https://machinelearningmastery.com/wp-content/uploads/2016/08/Text-Generation-With-LSTM-Recurrent-Neural-Networks-in-Python-with-Keras.jpg"
        },
        {
            "id": 9430,
            "title": "How to Save Your Machine Learning Model and Make Predictions in Weka",
            "url": "https://machinelearningmastery.com/save-machine-learning-model-make-predictions-weka/",
            "authors": "Jason Brownlee",
            "tags": "Weka Machine Learning",
            "publishedOn": "2016-08-03T00:00:00",
            "description": "After you have found a well performing machine learning model and tuned it, you must finalize your model so that you can make predictions on new data. In this post you will discover how to finalize your machine learning model, save it to file and load it later in order to make predictions on new [\u2026]",
            "thumbnail": "https://machinelearningmastery.com/wp-content/uploads/2016/08/How-to-Save-Your-Machine-Learning-Model-and-Make-Predictions-in-Weka.jpg"
        },
        {
            "id": 9431,
            "title": "Data Leakage in Machine Learning",
            "url": "https://machinelearningmastery.com/data-leakage-machine-learning/",
            "authors": "Jason Brownlee",
            "tags": "Data Preparation",
            "publishedOn": "2016-08-02T00:00:00",
            "description": "Data leakage is a big problem in machine learning when developing predictive models. Data leakage is when information from outside the training dataset is used to create the model. In this post you will discover the problem of data leakage in predictive modeling. After reading this post you will know: What is data leakage is [\u2026]",
            "thumbnail": "https://machinelearningmastery.com/wp-content/uploads/2016/07/Data-Leakage-in-Machine-Learning.jpg"
        },
        {
            "id": 9432,
            "title": "How to Tune Machine Learning Algorithms in Weka",
            "url": "https://machinelearningmastery.com/tune-machine-learning-algorithms-weka/",
            "authors": "Jason Brownlee",
            "tags": "Weka Machine Learning",
            "publishedOn": "2016-08-01T00:00:00",
            "description": "You can get the most from a machine learning algorithm by tuning its parameters, called hyperparameters. In this post you will discover how to tune machine learning algorithms with controlled experiments in Weka. After reading this post you will know: The importance of improving the performance of machine learning models by algorithm tuning. How to [\u2026]",
            "thumbnail": "https://machinelearningmastery.com/wp-content/uploads/2016/08/How-to-Tune-Machine-Learning-Algorithms-in-Weka.jpg"
        },
        {
            "id": 9433,
            "title": "How To Compare the Performance of Machine Learning Algorithms in Weka",
            "url": "https://machinelearningmastery.com/compare-performance-machine-learning-algorithms-weka/",
            "authors": "Jason Brownlee",
            "tags": "Weka Machine Learning",
            "publishedOn": "2016-07-29T00:00:00",
            "description": "What algorithm should you use for a given machine learning problem? This is the challenge of applied machine learning. There is no quick answer to this question, but there is a reliable process that you can use. In this post you will discover how to find good and even best machine learning algorithms for a [\u2026]",
            "thumbnail": "https://machinelearningmastery.com/wp-content/uploads/2016/07/How-To-Compare-the-Performance-of-Machine-Learning-Algorithms-in-Weka.jpg"
        },
        {
            "id": 9434,
            "title": "Understanding Stateful LSTM Recurrent Neural Networks in Python with Keras",
            "url": "https://machinelearningmastery.com/understanding-stateful-lstm-recurrent-neural-networks-python-keras/",
            "authors": "Jason Brownlee",
            "tags": "Deep Learning",
            "publishedOn": "2016-07-28T00:00:00",
            "description": "A powerful and popular recurrent neural network is the long short-term model network or LSTM. It is widely used because the architecture overcomes the vanishing and exposing gradient problem that plagues all recurrent neural networks, allowing very large and very deep networks to be created. Like other recurrent neural networks, LSTM networks maintain state, and [\u2026]",
            "thumbnail": "https://machinelearningmastery.com/wp-content/uploads/2016/07/Understanding-Stateful-LSTM-Recurrent-Neural-Networks-in-Python-with-Keras.jpg"
        },
        {
            "id": 9435,
            "title": "How to Use Ensemble Machine Learning Algorithms in Weka",
            "url": "https://machinelearningmastery.com/use-ensemble-machine-learning-algorithms-weka/",
            "authors": "Jason Brownlee",
            "tags": "Weka Machine Learning",
            "publishedOn": "2016-07-27T00:00:00",
            "description": "Ensemble algorithms are a powerful class of machine learning algorithm that combine the predictions from multiple models. A benefit of using Weka for applied machine learning is that makes available so many different ensemble machine learning algorithms. In this post you will discover the how to use ensemble machine learning algorithms in Weka. After reading [\u2026]",
            "thumbnail": "https://machinelearningmastery.com/wp-content/uploads/2016/07/How-to-Use-Ensemble-Machine-Learning-Algorithms-in-Weka.jpg"
        },
        {
            "id": 9436,
            "title": "Sequence Classification with LSTM Recurrent Neural Networks in Python with Keras",
            "url": "https://machinelearningmastery.com/sequence-classification-lstm-recurrent-neural-networks-python-keras/",
            "authors": "Jason Brownlee",
            "tags": "Deep Learning for Natural Language Processing",
            "publishedOn": "2016-07-26T00:00:00",
            "description": "Sequence classification is a predictive modeling problem where you have some sequence of inputs over space or time, and the task is to predict a category for the sequence. This problem is difficult because the sequences can vary in length, comprise a very large vocabulary of input symbols, and may require the model to learn [\u2026]",
            "thumbnail": "https://machinelearningmastery.com/wp-content/uploads/2016/07/Sequence-Classification-with-LSTM-Recurrent-Neural-Networks-in-Python-with-Keras.jpg"
        },
        {
            "id": 9437,
            "title": "How To Use Classification Machine Learning Algorithms in Weka",
            "url": "https://machinelearningmastery.com/use-classification-machine-learning-algorithms-weka/",
            "authors": "Jason Brownlee",
            "tags": "Weka Machine Learning",
            "publishedOn": "2016-07-25T00:00:00",
            "description": "Weka makes\u00a0a large number of classification algorithms available. The large number of machine learning algorithms available is one of the benefits of using the Weka platform to work through your machine learning problems. In this post you will discover how to use 5 top machine learning algorithms in Weka. After reading this post you will [\u2026]",
            "thumbnail": "https://machinelearningmastery.com/wp-content/uploads/2016/06/Weka-Visualization-of-a-Decision-Tree.png"
        },
        {
            "id": 9438,
            "title": "How To Use Regression Machine Learning Algorithms in Weka",
            "url": "https://machinelearningmastery.com/use-regression-machine-learning-algorithms-weka/",
            "authors": "Jason Brownlee",
            "tags": "Weka Machine Learning",
            "publishedOn": "2016-07-22T00:00:00",
            "description": "Weka has a large number of regression algorithms available on the platform. The large number of machine learning algorithms supported by Weka is one of the biggest benefits of using the platform. In this post you will discover how to use top regression machine learning algorithms in Weka. After reading this post you will know: [\u2026]",
            "thumbnail": "https://machinelearningmastery.com/wp-content/uploads/2016/06/Weka-GUI-Designer-for-the-Multi-Layer-Perceptron-Algorithm.png"
        },
        {
            "id": 9439,
            "title": "Time Series Prediction with LSTM Recurrent Neural Networks in Python with Keras",
            "url": "https://machinelearningmastery.com/time-series-prediction-lstm-recurrent-neural-networks-python-keras/",
            "authors": "Jason Brownlee",
            "tags": "Deep Learning for Time Series",
            "publishedOn": "2016-07-21T00:00:00",
            "description": "Time series prediction problems are a difficult type of predictive modeling problem. Unlike regression predictive modeling, time series also adds the complexity of a sequence dependence among the input variables. A powerful type of neural network designed to handle sequence dependence is called a recurrent neural network. The Long Short-Term Memory network or LSTM network [\u2026]",
            "thumbnail": "https://machinelearningmastery.com/wp-content/uploads/2016/07/Time-Series-Prediction-with-LSTM-Recurrent-Neural-Networks-in-Python-with-Keras.jpg"
        },
        {
            "id": 9440,
            "title": "How To Estimate A Baseline Performance For Your Machine Learning Models in Weka",
            "url": "https://machinelearningmastery.com/estimate-baseline-performance-machine-learning-models-weka/",
            "authors": "Jason Brownlee",
            "tags": "Weka Machine Learning",
            "publishedOn": "2016-07-20T00:00:00",
            "description": "It is really important to have a performance baseline on your machine learning problem. It will give you a point of reference to which you can compare all other models that you construct. In this post you will discover how to develop a baseline of performance for a machine learning problem using Weka. After reading [\u2026]",
            "thumbnail": "https://machinelearningmastery.com/wp-content/uploads/2016/07/How-To-Estimate-A-Baseline-Performance-For-Your-Machine-Learning-Models-in-Weka.jpg"
        },
        {
            "id": 9441,
            "title": "Time Series Prediction with Deep Learning in Keras",
            "url": "https://machinelearningmastery.com/time-series-prediction-with-deep-learning-in-python-with-keras/",
            "authors": "Jason Brownlee",
            "tags": "Deep Learning for Time Series",
            "publishedOn": "2016-07-19T00:00:00",
            "description": "Time Series prediction is a difficult problem both to frame and address with machine learning. In this post, you will discover how to develop neural network models for time series prediction in Python using the Keras deep learning library. After reading this post, you will know: About the airline passengers univariate time series prediction problem [\u2026]",
            "thumbnail": "https://machinelearningmastery.com/wp-content/uploads/2016/07/Airline-Passengers-Dataset.png"
        }
    ]
}