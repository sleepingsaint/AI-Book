name: Select source

on: 
  workflow_dispatch:
    inputs:
      source:
        type: string
        required: true
        description: source id to run the scrapper
      refetch:
        type: boolean

jobs:
  pythonSources:
    name: Handling all the python based sources
    runs-on: ubuntu-latest
    steps:
      - name: checking out the repo
        uses: actions/checkout@v3
      
      - name: setting up python dependecies
        run: pip3 install -r requirements.txt
      
      - name: download database
        env:
          DATABASE_URL: https://media.githubusercontent.com/media/${{github.repository}}/db/database.db
        run: |
          if curl -I -s -f $DATABASE_URL -o /dev/null;
            then
              curl -s $DATABASE_URL -o database.db
              echo "file downloaded"
            else
              echo "database doesn't exists"
              echo $DATABASE_URL
          fi 
      
      - name: download log file
        env:
          LOGFILE_URL: https://media.githubusercontent.com/media/${{github.repository}}/db/resource_scrapper.log
        run: |
          if curl -I -s -f $LOGFILE_URL -o /dev/null;
            then
              curl -s $LOGFILE_URL -o resource_scrapper.log
            else
              echo "Log file doesn't exists"
              echo $LOGFILE_URL
          fi
      - name: download chrome driver
        run: |
          wget https://chromedriver.storage.googleapis.com/104.0.5112.79/chromedriver_linux64.zip
          unzip chromedriver_linux64.zip
          rm chromedriver_linux64.zip
          pwd
          
      - name: fetching the new resources of the sources
        env:
          REFETCH: if [ ${{ inputs.refetch }} ]; then 1; else 0; fi
        run: python3 -m scrappers.python.${{ inputs.source }}
      
      - name: building json files (resources and sources) from database
        run: python3 build_script.py
        
      - name: clearing all the source code
        run: |
          rm -rf .github/
          rm -rf scrappers/
          rm -rf utils/
          rm -rf build_script.py
          rm -rf README.md
          rm -rf requirements.txt
          rm -rf .gitignore
      - name: update the database branch with new resources
        uses: stefanzweifel/git-auto-commit-action@v4
        with:
          commit_message: "Updated database of python sources"
          branch: db
          push_options: '--force'
          create_branch: true
